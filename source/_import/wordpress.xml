<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3.1" created="2012-05-13 08:38" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Airpfei</title>
	<link>http://lossbot.com</link>
	<description>Hello World</description>
	<pubDate>Sun, 13 May 2012 08:38:41 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://lossbot.com</wp:base_site_url>
	<wp:base_blog_url>http://lossbot.com</wp:base_blog_url>

	<wp:author><wp:author_id>3</wp:author_id><wp:author_login>pengfei</wp:author_login><wp:author_email>airpfei@gmail.com</wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>%e6%8a%80%e6%9c%af</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[技术]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>%e6%9c%aa%e5%88%86%e7%b1%bb</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[未分类]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>windows%e7%bc%96%e7%a8%8b</wp:category_nicename><wp:category_parent>%e6%8a%80%e6%9c%af</wp:category_parent><wp:cat_name><![CDATA[windows编程]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>5</wp:term_id><wp:tag_slug>desire-s-root</wp:tag_slug><wp:tag_name><![CDATA[desire s root]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>3</wp:term_id><wp:tag_slug>g12-root</wp:tag_slug><wp:tag_name><![CDATA[G12 root]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>s-off</wp:tag_slug><wp:tag_name><![CDATA[s-off]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>6</wp:term_id><wp:tag_slug>s-on</wp:tag_slug><wp:tag_name><![CDATA[s-on]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>4</wp:term_id><wp:tag_slug>s510e-root</wp:tag_slug><wp:tag_name><![CDATA[s510e root]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.3.1</generator>

	<item>
		<title>示例页面</title>
		<link>http://lossbot.com/sample-page</link>
		<pubDate>Fri, 08 Jul 2011 00:15:25 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/blog/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如：

<blockquote>欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的博客。我住在天朝的帝都，有条叫做 Jack 的狗。</blockquote>

... 或这个：

<blockquote>XYZ Doohickey 公司成立于 1971 年，自从建立以来，我们一直向社会贡献着优秀 doohickies。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</blockquote>

而您，作为一个 WordPress 用户，我们建议您访问<a href="http://lossbot.com/blog/wp-admin/">控制版</a>，删除本页面，然后添加您自己的页面。祝您使用愉快！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2011-07-08 00:15:25</wp:post_date>
		<wp:post_date_gmt>2011-07-08 00:15:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>世界，你好！</title>
		<link>http://lossbot.com/archives/hello-world</link>
		<pubDate>Fri, 08 Jul 2011 00:15:25 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/blog/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2011-07-08 00:15:25</wp:post_date>
		<wp:post_date_gmt>2011-07-08 00:15:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
		<wp:comment>
			<wp:comment_id>1</wp:comment_id>
			<wp:comment_author><![CDATA[WordPress 先生]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://wordpress.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-08 00:15:25</wp:comment_date>
			<wp:comment_date_gmt>2011-07-08 00:15:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[嗨，这是一条评论。<br />要删除一条评论，请先登录，然后再查看这篇文章的评论。在那里，您可以看到编辑或者删除评论的选项。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[aaa]]></wp:comment_author>
			<wp:comment_author_email>ada@acm.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>114.246.2.6</wp:comment_author_IP>
			<wp:comment_date>2011-11-06 20:14:57</wp:comment_date>
			<wp:comment_date_gmt>2011-11-06 12:14:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[2181563895]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[pf]]></wp:comment_author>
			<wp:comment_author_email>airpfei@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.252.9</wp:comment_author_IP>
			<wp:comment_date>2011-11-12 00:37:54</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 16:37:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[好长时间没有来了，现在WordPress 3.2 版本也更新了，官方还给了个新的主题，自己试用了下感觉不错，又想弄个新主题了。版本的更新，随之而来的一个问题又来了–草稿与修订版本的关闭。基本上每次版本的更新首先都先解决这个问题。而这次相比3.1的修改就简单了很多，无需修改程序的源文件，只需要在目前所使用的主题文件的functions.php中添加以下代码即可。

/* 移除自动保存和修订版本 */
remove_action('pre_post_update', 'wp_save_post_revision' );
add_action( 'wp_print_scripts', 'disable_autosave' );
function disable_autosave() {
    wp_deregister_script('autosave');
}
跟我对WordPress的文章自动保存草稿与修订版本反感的孩纸们，快来动动手！]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[pf]]></wp:comment_author>
			<wp:comment_author_email>airpfei@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.119.252.9</wp:comment_author_IP>
			<wp:comment_date>2011-11-12 00:41:51</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 16:41:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mysql 资政id 重置
ALTER TABLE tbl AUTO_INCREMENT = 1;]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[pf]]></wp:comment_author>
			<wp:comment_author_email>airpfei@sina.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.255.209.50</wp:comment_author_IP>
			<wp:comment_date>2011-12-07 00:42:50</wp:comment_date>
			<wp:comment_date_gmt>2011-12-06 16:42:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://boliquan.com/chrome-proxyswitchy-tunnelier-ssh/]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[aaa]]></wp:comment_author>
			<wp:comment_author_email>ada@acm.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.196.234.148</wp:comment_author_IP>
			<wp:comment_date>2011-12-25 21:31:22</wp:comment_date>
			<wp:comment_date_gmt>2011-12-25 13:31:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://www.tduanzi.com/tweets/17617.html]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[aaa]]></wp:comment_author>
			<wp:comment_author_email>ada@acm.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.196.234.148</wp:comment_author_IP>
			<wp:comment_date>2011-12-25 21:31:43</wp:comment_date>
			<wp:comment_date_gmt>2011-12-25 13:31:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://kuai.xunlei.com/d/XLSGSCKXAVZI]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>HTC Desire s (G12) ROOT</title>
		<link>http://lossbot.com/archives/htc-desire-s-g12-root</link>
		<pubDate>Tue, 23 Aug 2011 12:42:23 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[0、将<a href="http://lossbot.com/file/su-2.3.6.3-efgh-signed.zip">su-2.3.6.3-efgh-signed.zip</a>拷贝到手机sd卡中；

1、从<a href="http://revolutionary.io/" target="_blank">http://revolutionary.io/</a> 下载Revolutionary，也可以从<a title="Revolutionary" href="http://lossbot.com/file/revolutionary-0.4pre4.zip" target="_blank">这里下载</a>；

2、<a title="adb" href="http://lossbot.com/file/adb.rar" target="_blank">下载ADB</a>(android sdk中的)，同时确保手机上的USB调试(Debug USB)开关打开，手机连接模式为“只充电”；

3、<a title="fre3vo" href="http://lossbot.com/file/fre3vo.zip" target="_blank">下载fre3vo</a>；

开始root

<!--more-->

1）在cmd中输入：adb push fre3vo /data/local/tmp                     （adb为第二步中下载的文件解压后）

2）adb shell chmod 777 /data/local/tmp/fre3vo

3）adb shell  （这时cmd中出现$符号，证明还没有得到root权限）

4）继续3，输入/data/local/tmp/fre3vo -debug -start FAA90000 -end FFFFFFFF  （这时将从$符号中跳出来）

5）adb shell  （这时将出现#，证明root成功）

4）运行第一步下载的revolutionary.exe会生成一个序列号，到<a href="http://revolutionary.io/">http://revolutionary.io/</a>上获取code；

5）完成上一步后手机会重启，进入revolutionary模式，选择第0步下载的文件，可以安装root权限的工具，当然这时也可以开始刷rom了，推荐miui的rom(<a href="http://www.miui.com/forum.php?mod=viewthread&amp;tid=4437&amp;page=1">http://www.miui.com/forum.php?mod=viewthread&amp;tid=4437&amp;page=1</a>)

。。。。。。

revolutionary模式进入方法是，先拔电池，音量下 + 电源键 长按就可以进入

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2011-08-23 20:42:23</wp:post_date>
		<wp:post_date_gmt>2011-08-23 12:42:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>htc-desire-s-g12-root</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="desire-s-root"><![CDATA[desire s root]]></category>
		<category domain="post_tag" nicename="g12-root"><![CDATA[G12 root]]></category>
		<category domain="post_tag" nicename="s-off"><![CDATA[s-off]]></category>
		<category domain="post_tag" nicename="s-on"><![CDATA[s-on]]></category>
		<category domain="post_tag" nicename="s510e-root"><![CDATA[s510e root]]></category>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （一）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%80%ef%bc%89</link>
		<pubDate>Thu, 10 Nov 2011 15:10:24 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=4</guid>
		<description></description>
		<content:encoded><![CDATA[第1章：错误处理
<span style="padding-left: 30px;">调用GetLastError() 查看错误信息；</span>
<span style="padding-left: 30px;">$err,hr 在watch窗口查看错误信息</span>

第2章：字符和字符串的处理
<span style="padding-left: 30px;">字符串前的“L”告诉编译器该字符串为Unicode字符串；</span>
<span style="padding-left: 30px;">windows内部由Unicode字符构建，优先使用Unicode编码；</span>
<span style="padding-left: 30px;">CreateWindowExW (wide)接受Unicode编码，CreateWindowExA接受ANSI编码</span>
<span style="padding-left: 30px;">使用CompareStringOrdinal、CompareString(Ex)比较字符串；</span>
<span style="padding-left: 30px;">使用MultiByteToWideChar、WideCharToMultiByte进行Unicode、ANSI编码转换</span>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4</wp:post_id>
		<wp:post_date>2011-11-10 23:10:24</wp:post_date>
		<wp:post_date_gmt>2011-11-10 15:10:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%80%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （二）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%ba%8c%ef%bc%89</link>
		<pubDate>Fri, 11 Nov 2011 16:01:15 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[第3章：内核对象
<span style="padding-left: 30px;">每个内核对象是一个内存块，由操作系统分配，并只能由操作系统内核访问。</span>
<span style="padding-left: 30px;">调用函数创建内核对象时，调用失败句柄值通常为NULL，有几个函数返回值为-1 INVALID_HANDLE_VALUE。用于创建内核对象的函数检查返回值时要谨慎。</span>
<span style="padding-left: 30px;">调用CloseHandle关闭内核对象时，应将内核对象的变量设为NULL。 </span>
<span style="padding-left: 30px;">Creat*，Open*</span>
<span style="padding-left: 30px;">共享内核对象：对象句柄继承，为对象命名，复制对象句柄</span>
<span style="padding-left: 30px;">sample为专有命名空间的单实例进程,03-Singleton</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date>2011-11-12 00:01:15</wp:post_date>
		<wp:post_date_gmt>2011-11-11 16:01:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%ba%8c%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （三）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%89%ef%bc%89</link>
		<pubDate>Tue, 15 Nov 2011 15:03:33 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[第4章：进程
<span style="padding-left: 30px;">进程由内核对象和地址空间组成</span>
<span style="padding-left: 30px;">(w)WinMain的hInstanceExe参数是可执行文件的映像加载到内存的基址；</span>
<span style="padding-left: 30px;">HMODULE和HINSTANCE是一样的，由于win16导致函数名不同；</span>
<span style="padding-left: 30px;">__ImageBase连接器提供的伪变量，指向当前运行模块的基地址</span>
span style="padding-left: 30px;">GetModuleHandle(NULL)返回进程地址空间中可执行文件的基地址，而非DLL的基地址</span>
[cpp]
//使用HeapFree释放内存
PWSTR *ppArgv = CommandLineToArgvW(GetCommandLineW(), &amp;nNumArgs);
// Use the arguments…
if (*ppArgv[1] == L'x') {
   ...
}
// Free the memory block
HeapFree(GetProcessHeap(), 0, ppArgv);
[/cpp]
<span style="padding-left: 30px;">GetEnvironmentStrings、FreeEnvironmentStrings，环境变量，读注册表HKEY_CURRENT_USER_ENVIRONMENT</span>
<span style="padding-left: 30px;">SetErrorMode告诉系统如何处理错误</span>
<span style="padding-left: 30px;">目录名、文件名MAX_PATH=260</span>
<span style="padding-left: 30px;">GetCurrrentDirectory、SetCurrentDirectory、GetFullPathName</span>
[cpp]
PROCESS_INFORMATION pi;
DWORD dwExitCode;
// Spawn the child process.
BOOL fSuccess = CreateProcess(..., &amp;pi);
if (fSuccess) {
   // Close the thread handle as soon as it is no longer needed!
   //！！！递减子进程的主线程内核对象使用计数。使系统能够正常释放子进程
   CloseHandle(pi.hThread);
   // Suspend our execution until the child has terminated.
   WaitForSingleObject(pi.hProcess, INFINITE);
   // The child process terminated; get its exit code.
   GetExitCodeProcess(pi.hProcess, &amp;dwExitCode);
   // Close the process handle as soon as it is no longer needed.
   CloseHandle(pi.hProcess);
}
// 运行独立的子进程
BOOL fSuccess = CreateProcess(..., &amp;pi);
if (fSuccess) {
   // Allow the system to destroy the process &amp; thread kernel
   // objects as soon as the child process terminates.
   CloseHandle(pi.hThread);
   CloseHandle(pi.hProcess);
}
[/cpp]
<!--more-->
<br />
第5章：作业
<span style="padding-left: 30px;">Windows提供了作业（Job）内核对象，将进城组合在一起并创建一个“沙箱”来限制进程</span>
<span style="padding-left: 30px;">如果未定义manifest或debug，windows资源管理器会将进程同“PCA”前缀的作业关联，可以从cmd启动进程</span>
<span style="padding-left: 30px;">CreateJobObject、OpenJobObject、UserHandleGrantAccess、SetInformationJobObject、AssignProcessToJobObject、TerminateJobObject、QueryInformationJobObject、GetQueuedCompletionStatus</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2011-11-15 23:03:33</wp:post_date>
		<wp:post_date_gmt>2011-11-15 15:03:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%89%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[windows via c/c++ 笔记 （三） - Airpfei]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （四）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%9b%9b%ef%bc%89</link>
		<pubDate>Wed, 16 Nov 2011 16:25:06 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=7</guid>
		<description></description>
		<content:encoded><![CDATA[第6章：线程基础
<span style="padding-left: 30px;">线程由两部分组成：内核对象和线程栈</span>
<span style="padding-left: 30px;">线程共享地址空间、共享内核对象句柄，因为句柄表是针对进程的</span>
<span style="padding-left: 30px;">多线程时可以采用static变量防止对象被销毁，但这会使函数不可重入。（不能创建两个线程执行同一个函数，因为两个线程共享同一个静态变量）</span>
<span style="padding-left: 30px;">ExitThread、TerminateThread、GetExitCodeThread</span>
<span style="padding-left: 30px;">使用_beginthreadex而不要用CreateThread，CreateThread不是线程安全的，ExitThread没用释放_tiddata(_endthreadex释放了)。_endthread在调用ExitThread前会调用CloseHandle，而_endthreadex不会。</span>
<span style="padding-left: 30px;">GetCurrentProcess、GetCurrentThread、GetCurrentProcessId、GetCurrentThreadId、DuplicateHandle用于把进程的伪句柄转换为真正的进程句柄</span>

<!--more-->
第7章：线程调度、优先级和关联性
<span style="padding-left: 30px;">ResumeThread、SuspendThread，当挂起数为0时，线程可调度</span>
<span style="padding-left: 30px;">WaitForDebugEvent挂起进程中所有线程，直至ContinueDebugEvent</span>
<span style="padding-left: 30px;">SwitchToThread与Sleep(0)类似，SwitchToThread允许执行低优先级的线程而Sleep不可以</span>
<span style="padding-left: 30px;">GetTickCount64、GetThreadTimes、GetProcessTimes、QueryThreadCycleTime、QueryProcessCycleTime、ReadTimeStampCounter、QueryPerformanceFrequency、QueryPerformanceCounter</span>
<span style="padding-left: 30px;">调用GetThreadContext前应调用SuspendThread否则可能会导致Context信息不一致</span>
<span style="padding-left: 30px;">SetPriorityClass、SetProcessPriorityBoost、SetThreadPriorityBoost</span>
<span style="padding-left: 30px;">SetProcessAffinityMask、GetProcessAffinityMask、SetThreadIdealProcessor关联性</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date>2011-11-17 00:25:06</wp:post_date>
		<wp:post_date_gmt>2011-11-16 16:25:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%9b%9b%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[windows via c/c++ 笔记 （四） - Airpfei]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （五）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%ba%94%ef%bc%89</link>
		<pubDate>Sun, 20 Nov 2011 09:15:56 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=8</guid>
		<description></description>
		<content:encoded><![CDATA[第8章：用户模式下的线程同步
<span style="padding-left: 30px;">Interlocked系列函数，原子操作，使用时保证传给函数的变量是对齐的，否则可能会失效。_aligned_malloc</span>
<span style="padding-left: 30px;">当一个CPU修改了Cache中一个字节时，其他收到通知，并使自己的Cache作废。应该把只读（不经常读）与可读写的数据分别存放。GetLogicalProcessorInformation,__declspec(align(#))对齐</span>
<span style="padding-left: 30px;">volatile，优化器在用到这个变量时必须每次都小心地重新读取这个变量的值，而不是使用保存在寄存器里的备份。指针不受编译器的优化影响，必须从内存读取。</span>
<span style="padding-left: 30px;">关键段：EnterCriticalSection、LeaveCriticalSection、InitializeCriticalSection、DeleteCriticalSection、CriticalSectionTimeout、TryEnterCriticalSection</span>
<span style="padding-left: 30px;">当线程试图进入被占用的关键段，线程切换到等待状态。这意味着线程从用户模式切换到内核模式（大约 1000 个CPU；周期）。InitializeCriticalSectionAndSpinCount</span>
<span style="padding-left: 30px;">条件变量：SleepConditionVariable*、WakeConditionVariable、WakeAllConditiongVariable</span>
<span style="padding-left: 30px;">以原子方式操作一组对象时使用一个锁；同时访问多个逻辑资源，以相同的顺序获得锁的资源；不长时间占用锁</span>
<table linktabletoexcel="yes">
<caption class="table-title">
<span class="table-title">Comparison of Synchronization Mechanism Performance</span>
<br>
</caption>
<thead>
<tr valign="top">
<th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Threads\milliseconds</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Volatile Read</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Volatile Write</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Interlocked Increment</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Critical Section</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">SRWLock Shared</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">SRWLock Exclusive</b>
</p>
</th><th class="th" scope="col" align="left">
<p class="table-para">
<b class="bold">Mutex</b>
</p>
</th>
</tr>
</thead>
<tbody>
<tr valign="top">
<td class="td" align="left">
<p class="table-para">1</p>
</td><td class="td" align="left">
<p class="table-para">8</p>
</td><td class="td" align="left">
<p class="table-para">8</p>
</td><td class="td" align="left">
<p class="table-para">35</p>
</td><td class="td" align="left">
<p class="table-para">66</p>
</td><td class="td" align="left">
<p class="table-para">66</p>
</td><td class="td" align="left">
<p class="table-para">67</p>
</td><td class="td" align="left">
<p class="table-para">1060</p>
</td>
</tr>
<tr valign="top">
<td class="td" align="left">
<p class="table-para">2</p>
</td><td class="td" align="left">
<p class="table-para">8</p>
</td><td class="td" align="left">
<p class="table-para">76</p>
</td><td class="td" align="left">
<p class="table-para">153</p>
</td><td class="td" align="left">
<p class="table-para">268</p>
</td><td class="td" align="left">
<p class="table-para">134</p>
</td><td class="td" align="left">
<p class="table-para">148</p>
</td><td class="td" align="left">
<p class="table-para">11082</p>
</td>
</tr>
<tr valign="top">
<td class="td" align="left">
<p class="table-para">4</p>
</td><td class="td" align="left">
<p class="table-para">9</p>
</td><td class="td" align="left">
<p class="table-para">145</p>
</td><td class="td" align="left">
<p class="table-para">361</p>
</td><td class="td" align="left">
<p class="table-para">768</p>
</td><td class="td" align="left">
<p class="table-para">244</p>
</td><td class="td" align="left">
<p class="table-para">307</p>
</td><td class="td" align="left">
<p class="table-para">23785</p>
</td>
</tr>
</tbody>
</table>

<!--more-->
第9章：用内核对象进行线程同步

<span style="padding-left: 30px;">WaitForSingleObject、WaitForMultipleObjects，内核对象被触发返回。等待成功引起的副作用，由于事件对象触发时，在返回WAIT_OBJECT_0前会使对象变为非触发状态</span>
[cpp]
HANDLE h[2];
h[0] = hAutoResetEvent1;   // Initially nonsignaled
h[1] = hAutoResetEvent2;   // Initially nonsignaled
WaitForMultipleObjects(2, h, TRUE, INFINITE);
[/cpp]
<span style="padding-left: 30px;">hAutoResetEvent1先触发，hAutoResetEvent2触发，两线程的一个检测到触发，系统把两个事件对象都设为未触发</span>
<span style="padding-left: 30px;">事件内核对象：CreateEvent(Ex)、SetEvent、ResetEvent、PulseEvent(不经常使用)、OpenEvent(DuplicateHandle)。使用自动重置的对象，当对象被触发，系统只会让次要线程中的一个变为可调度状态，所以要在每个次要线程调用时使用SetEvent，否则其他次要线程将等待。</span>
<span style="padding-left: 30px;">可等待的计时器内核对象：CreateWaitableTimer、SetWaitableTimer、CancelWaitableTimer、OpenWaitableTimer</span>
[cpp]
void SomeFunc() {
   // Create a timer. (It doesn't matter whether it's manual-reset
   // or auto-reset.)
   HANDLE hTimer = CreateWaitableTimer(NULL, TRUE, NULL);

   // Set timer to go off in 5 seconds.
   LARGE_INTEGER li = { 0 };
   SetWaitableTimer(hTimer, &amp;li, 5000, TimerAPCRoutine, NULL, FALSE);

   //APC异步函数被插入线程，线程恢复
   // Wait in an alertable state for the timer to go off.
   SleepEx(INFINITE, TRUE);

   CloseHandle(hTimer);
}
[/cpp]
<span style="padding-left: 30px;">信号量内核对象：CreateSemaphore、OpenSemaphore、ReleaseSemaphore</span>
<span style="padding-left: 30px;">互斥量内核对象：CreateMutex、OpenMutex、RleaseMutex</span>
<span style="padding-left: 30px;">WaitForInputIdle、MsgWaitForMultipleObjects(Ex)(用户界面相关的线程使用)、WaitForDebugEvent、SignalObjectAndWait(通过原子操作让一个内核对象等待另一个内核对象)</span>
<span style="padding-left: 30px;">等待链遍历API检测死锁：ParseThreads、OpenThreadWaitChainSession、GetThreadChain</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date>2011-11-20 17:15:56</wp:post_date>
		<wp:post_date_gmt>2011-11-20 09:15:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%ba%94%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （六）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%85%ad%ef%bc%89</link>
		<pubDate>Wed, 23 Nov 2011 16:30:31 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[第10章 同步设备I/O与异步设备I/O
<span style="padding-left: 30px;">打开设备：CreateFile(文件、目录、逻辑磁盘驱动器、物理磁盘驱动器、串口、并口、邮件槽[一对多数据传输]客户端、命名管道[一对一数据传输]客户端)、CreateMailslot、CreateNamedPipe、CreatePipe、Socket、CreateConsoleScreenBuffer,GetFileType</span>
<span style="padding-left: 30px;">CreateFile 的高速缓存标志：FILE_FLAG_NO_BUFFERING(GetDiskFreeSpace扇区的整数倍)，FILE_FLAG_SEQUENTIAL_SCAN，FILE_FLAG_RANDOM_ACCESS，FILE_FLAG_WRITE_THROUGH</span>
<span style="padding-left: 30px;">FILE_FLAG_DELETE_ON_CLOSE、FILE_FLAG_BACKUP_SEMANTICS、FILE_FLAG_OPEN_REPARSE_POINT、FILE_FLAG_OPEN_NO_RECALL、FILE_FLAG_OVERLAPPED</span>
[cpp]
HANDLE hFile = CreateFile(...);
if (hFile == NULL) {
   // We'll never get in here
} else {
   // File might or might not be created OK
}

//Here's the correct way to check for an invalid file handle:
HANDLE hFile = CreateFile(...);
if (hFile == INVALID_HANDLE_VALUE) {
   // File not created
} else {
   // File created OK
}
[/cpp]
<span style="padding-left: 30px;">GetFileSizeEx、GetCompressedFileSize、SetFilePointerEx、SetEndOfFile</span>
<span style="padding-left: 30px;">执行同步设备I/O：ReadFile、WriteFile、FlushFileBuffers、CancelSynchronousIo</span>
<span style="padding-left: 30px;">异步：OVERLAPPED结构、CancelIoEx</span>
<span style="padding-left: 30px;">可提醒I/O：QueueUserApc(手动将一项添加到APC队列)、SleepEx、WaitForSingleObjectEx、WaitForMultipleObjectsEx、SignalObjectAndWait、GetQueuedCompletionStatusEx、MsgWaitForMultipleObjectsEx</span>
<span style="padding-left: 30px;">I/O完成端口：CreateCompletionPort、GetQueuedCompletionStatus、PostQueuedCompletionStatus</span>
[cpp]
//为了只创建I/O完成端口，只需要设置第四个参数。dwNumberOfConcurrentThreads (并发线程数量) = 0，系统默认为CPU的数量
HANDLE CreateNewCompletionPort(DWORD dwNumberOfConcurrentThreads) {
   return(CreateIoCompletionPort(INVALID_HANDLE_VALUE, NULL, 0,
      dwNumberOfConcurrentThreads));
}
[/cpp]
<span style="padding-left: 30px;">FILE_FLAG_NO_BUFFERING标志要求：缓存的起始位置必须是扇区大小的整数倍，VirtualAlloc函数可以确保内存块的起始位置位于分配粒度的边界</span>

<!--more-->
第11章 Windows线程池
<span style="padding-left: 30px;">异步调用函数：CreateThreadpoolWork、TrySubmitThreadpoolWork、SubmitThreadpoolWork、WaitForThreadpoolWorkCallbacks、CloseThreadpoolWork</span>
<span style="padding-left: 30px;">每隔一段时间调用函数：CreateThreadpoolTimer、SetThreadpoolTimer、WaitForThreadpoolTimerCallbacks、IsThreadpoolTimerSet、CloseThreadpoolTimer</span>
<span style="padding-left: 30px;">内核对象出发时调用函数：CreateThreadpoolWait、SetThreadpoolWait、CloseThreadpoolWait</span>
<span style="padding-left: 30px;">异步I/O请求完成时调用函数：CreateThreadpoolIo、StartThreadpoolIo、CancelThreadpoolIo、CloseThreadpoolIo</span>
<span style="padding-left: 30px;">the default thread pool has the minimum number of threads set to 1 and its maximum number of threads set to 500</span>

第12章 纤程
<span style="padding-left: 30px;">尽量避免使用纤程</span>
<span style="padding-left: 30px;">ConvertThreadToFiber(Ex)、CreateFiber(Ex)、SwitchToFiber、DeleteFiber、GetCurrentFiber、GetFiberData</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2011-11-24 00:30:31</wp:post_date>
		<wp:post_date_gmt>2011-11-23 16:30:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%85%ad%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[windows via c/c++ 笔记 （六） - Airpfei]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （七）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%83%ef%bc%89</link>
		<pubDate>Wed, 30 Nov 2011 15:49:27 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=10</guid>
		<description></description>
		<content:encoded><![CDATA[第13章 Windows内存体系结构
<span style="padding-left: 30px;">need reread</span>
<span style="padding-left: 30px;">空指针赋值分区、用户模式分区、64KB禁入分区、内核模式分区</span>
<span style="padding-left: 30px;">32位App运行在64位Windows分配的0x00000000'7FFFFFFF以下的地址空间，64位App默认在0x00000000'80000000以上的地址空间</span>
<span style="padding-left: 30px;">系统会确保VirtualAlloc预订的地址区域的起始地址是分配粒度(allocation granularity)的整数倍</span>
<span style="padding-left: 30px;">一个块是一些连续的页面</span>

第14章 探索虚拟内存
<span style="padding-left: 30px;">系统信息：GetSystemInfo、GetLogicalProcessorInformation、IsWow64Process、GetCurrentProcess</span>
<span style="padding-left: 30px;">虚拟内存状态：GlobalMemoryStatus(Ex)</span>
<span style="padding-left: 30px;">NUMA机器中的内存管理：GetNumaAvailableMemoryNode、GetNumaProcessNode、GetNumaHighestNodeNumber、GetNumaNodeProcessorMask</span>
地址空间的状态：VirtualQuery(Ex)
<span style="padding-left: 30px;">/dynamicbase  进程共享ASLR基址重定向的页面</span>
第15章 在应用程序中使用虚拟内存
<span style="padding-left: 30px;">虚拟内存：管理大型对象数组或大型数据结构数组</span>
<span style="padding-left: 30px;">内存映射文件：管理大型数据流，多进程共享数据</span>
<span style="padding-left: 30px;">堆：管理大量小型对象</span>
<span style="padding-left: 30px;">VirtualAlloc、VirtualFree、VirtualQuery、VirtualProtect</span>
地址窗口扩展(AWE)(使用物理内存，提高性能)：AllocateUserPhysicalPages、MapUserPhysicalPages、FreeUserPhysicalPages

第16章 线程栈
<span style="padding-left: 30px;">SetThreadStackGuarante</span>

<!--more-->

第17章 内存映射文件
<span style="padding-left: 30px;">映射到内存的EXE和DLL</span>
<span style="padding-left: 30px;">一个应用程序的多个实例共享内存中的代码和数据，避免一个实例修改全局变量导致错误，系统通过内存管理的写时复制特性防止此发生。数据写写入时，系统会为其开辟一块新的内存。</span>
<span style="padding-left: 30px;">#pragma data_seg("name") 用来创建名为"name"的段，该段内的数据必须初始化，否则数据不属于该段</span>
<span style="padding-left: 30px;">allocate允许将未初始化的数据放入莫个段中</span>
<span style="padding-left: 30px;">为数据创建单独的段是为了多个实例共享数据。编译选项/SECTION:name,attributes。#pragma comment(linker, "SECTION:Shared, RWS")</span>
<span style="padding-left: 30px;">_tscrev颠倒文件数据(0结尾)</span>
<span style="padding-left: 30px;">CreateFile(失败为NULL或INVALID_HANDLE_VALUE) --> CreateFileMapping (告诉系统映射文件需要多大的物理内存) --> MapViewOfFile --> UnmapViewOfFile --> FlushViewOfFile --> CloseHandle</span>
<span style="padding-left: 30px;">MoveMemory</span>
<span style="padding-left: 30px;">只读文件适合用于内存映射文件。可写文件不适合(无法保证一致性)，应独占文件(dwShareMode = 0)。</span>
<span style="padding-left: 30px;">以页交换文件为后备存储器的内存映射文件：CreateFileMapping时hFile = INVALID_HANDLE_VALUE</span>
<span style="padding-left: 30px;">稀疏调拨的内存映射文件：CreateMapping时传入SEC_RESERVE标志，系统不会从页交换文件中调拨物理存储器。然后使用VirtualAlloc调拨物理内存</span>
第18章 堆
<span style="padding-left: 30px;">GetProcessHeap获取进程默认堆句柄。默认堆只允许一个线程访问。</span>
<span style="padding-left: 30px;">HeapCreate、HeapAlloc、HeapSize、HeapFree、HeapDestroy</span>
<span style="padding-left: 30px;">GetProcessHeaps、HeapValidate、HeapCompact、HeapLock、HeapUnlock、HeapWalk</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date>2011-11-30 23:49:27</wp:post_date>
		<wp:post_date_gmt>2011-11-30 15:49:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e4%b8%83%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java nio demo</title>
		<link>http://lossbot.com/archives/java-nio-demo</link>
		<pubDate>Sun, 13 Nov 2011 13:22:08 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="padding-left: 30px;">J2SE1.4中引入了新I/O库(NIO)来解决这个问题。NIO使用面向缓冲(buffer)的模型。这就是说，NIO主要处理大块的数据。这就避免了利用流模型处理所引起的问题，在有可能的情况下，它甚至可以为了得到最大的吞吐量而使用系统级的工具。</span>

[java collapse="true" smarttabs="true"]
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.nio.channels.*;
import java.util.Set;

public class TestChannel {
    public static void main(String args[]) throws IOException{
        TestChannel tt=new TestChannel();
        //tt.initServerChannel(992);
        tt.initSelector(992);
    }

    //最初的java  socket实现方式，直接通过serversocket和socket通信
    public void initServerSocket(int port) throws IOException{
        ServerSocketChannel ssc=ServerSocketChannel.open();
        //ssc.configureBlocking(false);
        ServerSocket ss=new ServerSocket(port);
        while(true){
            Socket socket=ss.accept();
                System.out.println(&quot;socket accepted&quot;);
                byte[] buf=new byte[1024];
                try{
                socket.getInputStream().read(buf);
                }
                catch(Exception ex){
                    socket.close();
                }
                System.out.println(new String(buf));

        }
    }
    //通过Channel实现的non-blocking通信方式
    public void initServerChannel(int port) throws IOException{
        ServerSocketChannel ssc=ServerSocketChannel.open();
        ssc.configureBlocking(false);
        ServerSocket ss=ssc.socket();
        ss.bind(new InetSocketAddress(port));
        while(true){
            SocketChannel sc=ssc.accept();
            if(sc!=null){
                Socket socket=sc.socket();
                System.out.println(&quot;socket accepted&quot;);
                byte[] buf=new byte[1024];
                try{
                socket.getInputStream().read(buf);
                }
                catch(Exception ex){
                    socket.close();
                }
                System.out.println(new String(buf));
            }
        }
    }
    //通过selector和channel进行multiplexed通信,像mina就是通过这种方式实现的
    public void initSelector(int port) throws IOException{
        Selector selector=Selector.open();
        //register server channel
        ServerSocketChannel ssc=ServerSocketChannel.open();
        ssc.configureBlocking(false);
        ServerSocket ss=ssc.socket();
        ss.bind(new InetSocketAddress(port));
        ssc.register(selector, SelectionKey.OP_ACCEPT);
        while(true){
            int interestNo=selector.select();
            if(interestNo==0)
                continue;
            Set keys=selector.selectedKeys();
            for(SelectionKey key:keys){
                //接受Socket连接请求
                if(key.isAcceptable()){
                    SocketChannel sc=ssc.accept();
                    try{
                    sc.configureBlocking(false);
                    sc.register(selector, SelectionKey.OP_READ);
                    }
                    catch(Exception ex){
                        sc.close();
                    }
                    System.out.println(&quot;connection accepted&quot;);
                    keys.remove(key);
                }
                else if(key.isReadable()){
                    SocketChannel sc=(SocketChannel)key.channel();
                    ByteBuffer bbuf=ByteBuffer.allocate(1024);
                    try{
                    sc.read(bbuf);
                    }
                    catch(Exception ex){
                        sc.close();
                    }
                    System.out.println(new String(bbuf.array()));
                    keys.remove(key);
                }
                else
                    keys.remove(key);
                    continue;

                }
            }
        }
    }
// client:

//Java代码
public class TestChannelClient {
public static void main(String args[]) throws UnknownHostException, IOException{
    Socket sc=new Socket(&quot;127.0.0.1&quot;,992);
    OutputStream out=sc.getOutputStream();
    out.write(&quot;hello&quot;.getBytes());
    out.flush();
}
}
[/java] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2011-11-13 21:22:08</wp:post_date>
		<wp:post_date_gmt>2011-11-13 13:22:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java-nio-demo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[java nio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=155</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=155</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>155</wp:post_id>
		<wp:post_date>2012-03-28 22:43:03</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=156</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2012-03-28 22:44:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=157</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2012-03-28 22:45:11</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=158</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=158</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>158</wp:post_id>
		<wp:post_date>2012-03-28 22:45:18</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=159</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=159</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>159</wp:post_id>
		<wp:post_date>2012-03-29 21:41:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=160</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=160</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2012-03-29 23:40:02</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=161</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2012-03-30 16:26:33</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=162</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=162</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>162</wp:post_id>
		<wp:post_date>2012-03-30 23:53:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=163</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2012-03-30 23:54:15</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>自动草稿</title>
		<link>http://lossbot.com/?p=164</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2012-03-31 00:19:04</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
	</item>
	<item>
		<title>windows via c/c++ 笔记 （八）</title>
		<link>http://lossbot.com/archives/windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%85%ab%ef%bc%89</link>
		<pubDate>Fri, 09 Dec 2011 15:16:25 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=11</guid>
		<description></description>
		<content:encoded><![CDATA[第19章 DLL基础
<span style="padding-left: 30px;">一般在dll中分配的内存，都需要通过dll释放</span>
<span style="padding-left: 30px;">DLL若连接的是静态版本，那么DLL的代码里面就会有一份free和malloc的代码，若EXE也使用的是静态版本的C/C++运行库，那么也会有另一份代码。当然你使用DLL代码里申请的内存不能在EXE的free代码中释放。原因是因为有两个不通的堆管理，在EXE中查不到相应申请的内存，自然释放会失败。</span>
<span style="padding-left: 30px;">导出函数或变量，链接器生成lib文件。</span>
<span style="padding-left: 30px;">dumpbin -exports *.dll</span>
<span style="padding-left: 30px;">dumpbin -imports *.exe</span>
<span style="padding-left: 30px;">避免MS VC++的名字粉碎(Name Mangling)：.def文件EXPORTS段导出函数名；extern "C"；#pragma comment (linker, "/export:MyFunc=_MyFunc@8")</span>
<span style="padding-left: 30px;">导入：__declspec(dllimport)或使用extern</span>
<span style="padding-left: 30px;">运行可执行模块：操作系统加载程序为进程创建虚拟地址空间，把可执行模块映射到进程的地址空间中。之后加载程序会检查可执行模块的导入段(不同版本的dll可能在这个步骤出问题)，对所需的DLL进行定位并将其映射到进程的地址空间中。</span>
<span style="padding-left: 30px;">基址重定位和绑定可以加快应用程序初始化速度。</span>
第20章 DLL高级技术
<span style="padding-left: 30px;">LoadLibrary(Ex)、FreeLibrary、FreeLibraryAndExitThread、GetModuleHandle、GetModuleFileName</span>
<span style="padding-left: 30px;">GetProcAddress</span>
<span style="padding-left: 30px;">DllMain的序列化调用。DisableThreadLibraryCalls</span>
<span style="padding-left: 30px;">延迟载入DLL：当我们的代码试图引用DLL包含的符号时载入DLL。加快初始化速度；解决老版本DLL没有一些函数的问题。</span>
<span style="padding-left: 30px;">一个导出全局变量的DLL、Kernel32.dll无法延迟加载。不应在DllMain中调用延迟加载的函数。</span>
<span style="padding-left: 30px;">VcppException延迟载入DLL异常处理，DelayLoadInfo</span>
<span style="padding-left: 30px;">函数转发器：#pragma comment (linker, "/export:SomeFunc=Dllwork.SomeOtherFunc")</span>
<span style="padding-left: 30px;">模块的基地址重定位，显著提高整个系统的性能。/FIXED不包含重定位段。</span>
<span style="padding-left: 30px;">模块的绑定，提高性能，不必再对模块重新定位，不必查看导入函数的虚拟地址。</span>
第21章 线程局部存储区
<span style="padding-left: 30px;">动态TSL：TlsAlloc、TlsSetValue、TlsGetValue、TlsFree</span>
<span style="padding-left: 30px;">静态TLS：__declspec(thread)</span>
第22章 DLL注入和API拦截
<span style="padding-left: 30px;"><a href="http://www.codeproject.com/KB/system/inject2it.aspx" target="_blank">Demo</a></span>
<span style="padding-left: 30px;">SetWindowLongPtr。从根本上将，DLL注入是目标进程中的一个线程调用LoadLibrary载入我们想要的DLL。</span>
<span style="padding-left: 30px;">使用注册表注入DLL：只会映射到使用Use32.dll的进程中</span>
<span style="padding-left: 30px;">使用Windows挂钩注入DLL：SetWindowsHookEx、UnhookWindowsHookEx。使用PostThreadMessage线程同步。</span>
<span style="padding-left: 30px;">使用远程线程注入DLL：CreateRemoteThread、VirtualAllocEx、VirtualFreeEx、ReadProcessMemory、WriteProcessMemory</span>

结构化异常处理
<span style="padding-left: 30px;">__try中使用return、goto、longjump，__finally中的代码也会被执行。</span>
<span style="padding-left: 30px;">__try, __finally 框架会使finally中的代码执行</span>
<span style="padding-left: 30px;">__leave关键字会使执行代码跳转到try块的结尾。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date>2011-12-09 23:16:25</wp:post_date>
		<wp:post_date_gmt>2011-12-09 15:16:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows-via-cc-%e7%ac%94%e8%ae%b0-%ef%bc%88%e5%85%ab%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="windows%e7%bc%96%e7%a8%8b"><![CDATA[windows编程]]></category>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af"><![CDATA[技术]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Goodbye C Sharp</title>
		<link>http://lossbot.com/archives/goodbye-c-sharp</link>
		<pubDate>Fri, 09 Dec 2011 16:03:57 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="padding-left: 30px;">公司一款产品的最后的一个版本即将发布，以后在这款产品上只是一些例行的维护，不会再有什么重大的变化。这是一套以.net框架为基础的产品，由于性能问题，ui的掌控的问题使得公司最终放弃.net框架。</span>
<span style="padding-left: 30px;">我从2009年8月开始接触.net，一边学习，一边实践。经过2年C#编程，也对C#及.net框架有一些了解。先先说一下有点吧，那就是简单。.net把对字符串、Window、network的操作变得非常简单。但是由于.net的封装，使得一些底层的操作非常困难。例如，给Window设置一个Class，至今我还不知道如何设置。又如WinForm原生控件的定制性很差，不能满足一些常用的需求，有时必须使用Win32Api来完成。还有就是.net本身的性能问题，使得很多商业软件放弃使用。</span>
<span style="padding-left: 30px;">当然，在这两年里，也接触了一些.net框架中比较新的东西，如WPF。不得不承认WPF把UI实现变得很容易。但WPF对设备性能的要求，对.net版本的要求使得许多商业软件放弃使用。要知道在Win xp占有率达到75%的天朝，.net3.5是多么遥不可及！</span>
<span>对一些企业内部的管理软件，.net还是很适合的，节约开发成本。如果开发者对Windows的内存没有很好的掌控力，使用C/C++有可能适得其反。.net的GC使得开发者不用花很多精力放在内存管理上。觉得WinPhone可能会让C#上升到一个新的高度</span>
<span style="padding-left: 30px;">感觉silverlight的死期不远了，html5使得silverlight没有什么存在的价值了。</span>
<span style="padding-left: 30px;">即将告别C#投向C++阵营，还是很感谢C#的，毕竟之前我是用它混饭的。一直很想使用C++编程，因为这是一门公认的复杂语言，也应为我能更近距离的接触操作系统。</span>
<span style="padding-left: 30px;">白天折腾了很久mp4box，学习到一点C++的调试技巧。在link错误时，编译器表错为_function not found，开始以为_function是函数名，结果搜了半天没找到，最后才发现“_”不是函数名的一部分。</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2011-12-10 00:03:57</wp:post_date>
		<wp:post_date_gmt>2011-12-09 16:03:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goodbye-c-sharp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>read some source code in the next few months</title>
		<link>http://lossbot.com/archives/read-sourcecode</link>
		<pubDate>Thu, 15 Mar 2012 14:47:49 +0000</pubDate>
		<dc:creator>pengfei</dc:creator>
		<guid isPermaLink="false">http://lossbot.com/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[modern c++ design let me know c++ template can do much more, although i can't complete understand. i need read it again.
loki, chrome, linux kernel i really want to read.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2012-03-15 22:47:49</wp:post_date>
		<wp:post_date_gmt>2012-03-15 14:47:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>read-sourcecode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%9c%aa%e5%88%86%e7%b1%bb"><![CDATA[未分类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[read-some-source-code-in-the-next-few-months]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
